/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

    /**
     * End of File.
     */
    int EOF = 0;
    /**
     * RegularExpression Id.
     */
    int INT = 6;
    /**
     * RegularExpression Id.
     */
    int BOOL = 7;
    /**
     * RegularExpression Id.
     */
    int REF = 8;
    /**
     * RegularExpression Id.
     */
    int TRUE = 9;
    /**
     * RegularExpression Id.
     */
    int FALSE = 10;
    /**
     * RegularExpression Id.
     */
    int DEREF = 11;
    /**
     * RegularExpression Id.
     */
    int SEMICOL = 12;
    /**
     * RegularExpression Id.
     */
    int COL = 13;
    /**
     * RegularExpression Id.
     */
    int FUNCTION = 14;
    /**
     * RegularExpression Id.
     */
    int ARROW = 15;
    /**
     * RegularExpression Id.
     */
    int THEN = 16;
    /**
     * RegularExpression Id.
     */
    int DO = 17;
    /**
     * RegularExpression Id.
     */
    int IF = 18;
    /**
     * RegularExpression Id.
     */
    int ELSE = 19;
    /**
     * RegularExpression Id.
     */
    int WHILE = 20;
    /**
     * RegularExpression Id.
     */
    int NEW = 21;
    /**
     * RegularExpression Id.
     */
    int GT = 22;
    /**
     * RegularExpression Id.
     */
    int GTE = 23;
    /**
     * RegularExpression Id.
     */
    int LT = 24;
    /**
     * RegularExpression Id.
     */
    int LTE = 25;
    /**
     * RegularExpression Id.
     */
    int DECL = 26;
    /**
     * RegularExpression Id.
     */
    int ASSIGN = 27;
    /**
     * RegularExpression Id.
     */
    int DEF = 28;
    /**
     * RegularExpression Id.
     */
    int EQ = 29;
    /**
     * RegularExpression Id.
     */
    int NOTEQ = 30;
    /**
     * RegularExpression Id.
     */
    int OR = 31;
    /**
     * RegularExpression Id.
     */
    int AND = 32;
    /**
     * RegularExpression Id.
     */
    int NOT = 33;
    /**
     * RegularExpression Id.
     */
    int COMMA = 34;
    /**
     * RegularExpression Id.
     */
    int IN = 35;
    /**
     * RegularExpression Id.
     */
    int END = 36;
    /**
     * RegularExpression Id.
     */
    int PLUS = 37;
    /**
     * RegularExpression Id.
     */
    int MINUS = 38;
    /**
     * RegularExpression Id.
     */
    int TIMES = 39;
    /**
     * RegularExpression Id.
     */
    int DIV = 40;
    /**
     * RegularExpression Id.
     */
    int LPAR = 41;
    /**
     * RegularExpression Id.
     */
    int RPAR = 42;
    /**
     * RegularExpression Id.
     */
    int NUM = 43;
    /**
     * RegularExpression Id.
     */
    int ID = 44;
    /**
     * RegularExpression Id.
     */
    int EOL = 45;

    /**
     * Lexical state.
     */
    int DEFAULT = 0;

    /**
     * Literal token values.
     */
    String[] tokenImage = {
            "<EOF>",
            "\" \"",
            "\"\\t\"",
            "\"\\r\"",
            "\"\\n\"",
            "\"\\f\"",
            "\"int\"",
            "\"bool\"",
            "\"ref\"",
            "\"true\"",
            "\"false\"",
            "\"!\"",
            "\";\"",
            "\":\"",
            "\"fun\"",
            "\"->\"",
            "\"then\"",
            "\"do\"",
            "\"if\"",
            "\"else\"",
            "\"while\"",
            "\"new\"",
            "\">\"",
            "\">=\"",
            "\"<\"",
            "\"<=\"",
            "\"let\"",
            "\":=\"",
            "\"=\"",
            "\"==\"",
            "\"!=\"",
            "\"||\"",
            "\"&&\"",
            "\"~\"",
            "\",\"",
            "\"in\"",
            "\"end\"",
            "\"+\"",
            "\"-\"",
            "\"*\"",
            "\"/\"",
            "\"(\"",
            "\")\"",
            "<NUM>",
            "<ID>",
            "\";;\"",
    };

}
